let pointsCar = [
    [1, 3], [2, 2], [2, 3],
    [2, 4], [2, 5], [2, 6], 
    [3, 1], [3, 2], [3, 3],
    [3, 4], [3, 5], [3, 6],
    [3, 7], [4, 1], [4, 2], 
    [4, 3], [4, 4], [4, 5], 
    [4, 6], [4, 7], [5, 1], 
    [5, 2], [5, 3], [5, 4], 
    [5, 5], [5, 6], [5, 7],
    [6, 1], [6, 2], [6, 3],
    [6, 4], [6, 5], [6, 6], 
    [6, 7], [7, 2], [7, 3],
    [7, 4], [7, 5], [7, 6], 
    [8, 3],
    
];

const barrierShapes = {
    first: () => {
        return {
            width: 10,
            height: 10,
            points: [
                [4, -8], [5, -8], [6, -8], [7, -8],
                [0, -8], [1, -8], [2, -8], [3, -8],

                [4, -7], [5, -7], [6, -7], [7, -7], 
                [0, -7], [1, -7], [2, -7], [3, -7],

                [4, -6], [5, -6], [6, -6], [7, -6], 
                [0, -6], [1, -6], [2, -6], [3, -6], 

                [4, -5], [5, -5], [6, -5], [7, -5], 
                [0, -5], [1, -5], [2, -5], [3, -5],

                [4, -4], [5, -4], [6, -4], [7, -4], 
                [0, -4], [1, -4], [2, -4], [3, -4], 

                [4, -3], [5, -3], [6, -3], [7, -3], 
                [0, -3], [1, -3], [2, -3], [3, -3], 

                [4, -2], [5, -2], [6, -2], [7, -2], 
                [0, -2], [1, -2], [2, -2], [3, -2],

                [4, -1], [5, -1], [6, -1], [7, -1], 
                [0, -1], [1, -1], [2, -1], [3, -1],

                [4, 0],  [5, 0],  [6, 0],  [7, 0],
                [0, 0],  [1, 0],  [2, 0],  [3, 0]
        ]};
    },
    second: () => {
        return{
            width: 10,
            height: 10,
            points:[
                [4, -8], [5, -8], [6, -8], [7, -8],
                [0, -8], [1, -8], [2, -8], [3, -8],
    
                [4, -7], [5, -7], [6, -7], [7, -7], 
                [0, -7], [1, -7], [2, -7], [3, -7],
    
                [4, -6], [5, -6], [6, -6], [7, -6], 
                [0, -6], [1, -6], [2, -6], [3, -6], 
    
                [4, -5], [5, -5], [6, -5], [7, -5], 
                [0, -5], [1, -5], [2, -5], [3, -5],
    
                [4, -4], [5, -4], [6, -4], [7, -4], 
                [0, -4], [1, -4], [2, -4], [3, -4], 
    
                [4, -3], [5, -3], [6, -3], [7, -3], 
                [0, -3], [1, -3], [2, -3], [3, -3], 
    
                [4, -2], [5, -2], [6, -2], [7, -2], 
                [0, -2], [1, -2], [2, -2], [3, -2],
    
                [4, -1], [5, -1], [6, -1], [7, -1], 
                [0, -1], [1, -1], [2, -1], [3, -1],
    
                [4, 0],  [5, 0],  [6, 0],  [7, 0],
                [0, 0],  [1, 0],  [2, 0],  [3, 0]
        ]};
    },
    third: () =>{
        return [[42, -6],  [43, -6] ,[44, -6],[45, -6],[46, -6],[47, -6],  [48, -6],
        [42, -5],[43, -5] ,[44, -5] ,[45, -5],[46, -5],[47, -5],[48, -5],  [49, -5],
        [48, -4],[49, -4] ,[40, -4] ,[41, -4],[42, -4],[43, -4],[44, -4],  [45, -4],
        [48, -3],[49, -3] ,[40, -3] ,[41, -3],[42, -3],[43, -3],[44, -3],  [45, -3],
        [48, -2],[49, -2] ,[40, -2] ,[41, -2],[42, -2],[43, -2],[44, -2],  [45, -2],
        [48, -1],[49, -1] ,[40, -1] ,[41, -1],[42, -1],[43, -1],[44, -1],  [45, -1],
        [48, 0],[49, 0] ,[40, 0] ,[41, 0],[42, 0],[43, 0],[44, 0],[45, 0], [49, -6],
        ];
    },
    fourth:() =>{
        return [
        [9, -3], [10, -3],[11, -3],[12, -3],[13, -3],[14, -3],[15, -3],[16, -3],[17, -3],
        [9, -2], [10, -2],[11, -2],[12, -2],[13, -2],[14, -2],[15, -2],[16, -2],[17, -2],
        [9, -1], [10, -1],[11, -1],[12, -1],[13, -1],[14, -1],[15, -1],[16, -1],[17, -1],
        [9, 0],  [10, 0], [ 11, 0],[12, 0], [13, 0], [14, 0], [15, 0], [16, 0], [17, 0]
        ];
    },
    fifth:() =>{
        return [
        [10, -3],[11, -3],[12, -3],[13, -3],[14, -3],[15, -3], 
        [10, -2],[1, -2], [12, -2],[13, -2],[14, -2],[15, -2],   
        [10, -1],[11, -1],[12, -1],[13, -1],[14, -1],[15, -1],   
        [10, 0], [11, 0], [12, 0], [13, 0], [14, 0],[15, 0]    
        ];
    }
};